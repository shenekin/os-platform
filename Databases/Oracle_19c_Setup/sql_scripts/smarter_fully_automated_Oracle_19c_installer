#!/bin/bash
# =====================================================
# Intelligent Fully Automated Oracle 19c Installer
# Features:
# 1. Auto-detect RAM/CPU to calculate DB memory allocation
# 2. Auto-generate ORACLE_SID names if not provided
# 3. Check/install prerequisites
# 4. Silent installation via runInstaller
# 5. Database creation via dbca
# 6. Listener setup and tablespaces
# 7. Auto-start configuration
# =====================================================

# -------------------------
# User Configurable Variables
# -------------------------
# Oracle 19c Environment Variables
# Oracle base directories
export ORACLE_BASE=/or01/app
export ORACLE_HOME=$ORACLE_BASE/oracle/product/19c/dbhome_1
export SQLPATH=$ORACLE_HOME/sqlplus/admin
export TMP=/tmp
export TMPDIR=/tmp
# Oracle SID (System Identifier)
export ORACLE_SID=ord1
# Oracle Net Service (Listener TNS)
export ORACLE_UNQNAME=$ORACLE_SID
export TNS_ADMIN=$ORACLE_HOME/network/admin
# Path settings
export PATH=$ORACLE_HOME/bin:$ORACLE_HOME/OPatch:$PATH
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib
export CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib
# Java for Oracle tools (e.g., DBCA, NetCA)
export JAVA_HOME=$ORACLE_HOME/jdk
export PATH=$JAVA_HOME/bin:$PATH
# Character set (optional, for multi-language DB support)
export NLS_LANG=AMERICAN_AMERICA.AL32UTF8
# SQL*Plus prompt (useful for multiple DBs)
export SQLPROMPT='[_USER"@"_CONNECT_IDENTIFIER]> '
# History control (long commands)
export HISTSIZE=10000
export HISTFILESIZE=20000
export ORACLE_USER="oracle"
export ORACLE_GROUP="oinstall"
export DBA_GROUP="dba"
export INSTALL_ZIP_PATH="/opt/oracle/LINUX.X64_193000_db_home.zip"
export INSTANCE_LIST=()              # Leave empty to auto-generate
export ISTENER_PORT=1560
export TABLESPACES=("USERS:100M" "DATA:500M")
export PROFILE_FILE="/home/$ORACLE_USER/.bash_profile"

# -------------------------
# Function: Check prerequisites
# -------------------------
echo "Checking prerequisites..."
REQUIRED_PKGS=(unzip libaio bc elfutils-libelf)
for PKG in "${REQUIRED_PKGS[@]}"; do
    if ! rpm -q $PKG &>/dev/null; then
        echo "Installing missing package: $PKG"
        yum install -y $PKG
    fi
done

mkdir -p $ORACLE_BASE/oraInventory/
mkdir -p $ORACLE_HOME

# -------------------------
# Detect system RAM and calculate DB memory percentage
# -------------------------
TOTAL_MEM_MB=$(free -m | awk '/Mem:/ {print $2}')
# Allocate 40% of total memory if small server, max 8GB
if [ $TOTAL_MEM_MB -lt 16000 ]; then
    DB_MEMORY_PERCENT=40
else
    DB_MEMORY_PERCENT=60
fi
echo "Detected RAM: $TOTAL_MEM_MB MB, DBCA memory allocation: $DB_MEMORY_PERCENT%"

# -------------------------
# Auto-generate ORACLE_SID if INSTANCE_LIST is empty
# -------------------------
if [ ${#INSTANCE_LIST[@]} -eq 0 ]; then
    INSTANCE_LIST=("ORCL$(date +%s | tail -c4)")
fi

# -------------------------
# Configure environment variables
# -------------------------
echo "Configuring environment variables..."
cat >> $PROFILE_FILE <<EOF
export ORACLE_BASE=/or01/app
export ORACLE_HOME=$ORACLE_BASE/oracle/product/19c/dbhome_1
export SQLPATH=$ORACLE_HOME/sqlplus/admin
export TMP=/tmp
export TMPDIR=/tmp
# Oracle SID (System Identifier)
export ORACLE_SID=ord1
# Oracle Net Service (Listener TNS)
export ORACLE_UNQNAME=$ORACLE_SID
export TNS_ADMIN=$ORACLE_HOME/network/admin
# Path settings
export PATH=$ORACLE_HOME/bin:$ORACLE_HOME/OPatch:$PATH
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib
export CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib
# Java for Oracle tools (e.g., DBCA, NetCA)
export JAVA_HOME=$ORACLE_HOME/jdk
export PATH=$JAVA_HOME/bin:$PATH
# Character set (optional, for multi-language DB support)
export NLS_LANG=AMERICAN_AMERICA.AL32UTF8
# SQL*Plus prompt (useful for multiple DBs)
export SQLPROMPT='[_USER"@"_CONNECT_IDENTIFIER]> '
# History control (long commands)
export HISTSIZE=10000
export HISTFILESIZE=20000
export ORACLE_USER="oracle"
export ORACLE_GROUP="oinstall"
export DBA_GROUP="dba"
export INSTALL_ZIP_PATH="/opt/oracle/LINUX.X64_193000_db_home.zip"
export INSTANCE_LIST=()              # Leave empty to auto-generate
export ISTENER_PORT=1560
export TABLESPACES=("USERS:100M" "DATA:500M")
EOF
source $PROFILE_FILE

# -------------------------
# Extract Oracle installation files
# -------------------------
echo "Extracting Oracle installation files..."
mkdir -p $TMP_DIR
unzip -q $INSTALL_ZIP_PATH -d $TMP_DIR

# -------------------------
# Generate runInstaller response file
# -------------------------
RESPONSE_FILE="$TMP_DIR/db_install.rsp"
cat > $RESPONSE_FILE <<EOF
oracle.install.option=INSTALL_DB_SWONLY
ORACLE_HOSTNAME=$(hostname -f)
UNIX_GROUP_NAME=$ORACLE_GROUP
INVENTORY_LOCATION=$ORACLE_BASE/oraInventory
ORACLE_HOME=$ORACLE_HOME
ORACLE_BASE=$ORACLE_BASE
oracle.install.db.InstallEdition=EE
oracle.install.db.OSDBA_GROUP=$DBA_GROUP
oracle.install.db.OSOPER_GROUP=oper
DECLINE_SECURITY_UPDATES=true
EOF

# -------------------------
# Run runInstaller as Oracle user
# -------------------------
echo "Starting Oracle software installation..."
su - $ORACLE_USER -c "$TMP_DIR/runInstaller -silent -responseFile $RESPONSE_FILE -ignorePrereq -waitforcompletion"

# -------------------------
# Execute root scripts
# -------------------------
echo "Running root scripts..."
$ORACLE_BASE/oraInventory/orainstRoot.sh
$ORACLE_HOME/root.sh

# -------------------------
# Configure Listener
# -------------------------
echo "Configuring listener..."
cat > $ORACLE_HOME/network/admin/listener.ora <<EOF
LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = $(hostname -f))(PORT = $LISTENER_PORT))
    )
  )
EOF

lsnrctl stop LISTENER 2>/dev/null
lsnrctl start LISTENER
lsnrctl status

# -------------------------
# Create Database Instances
# -------------------------
for SID in "${INSTANCE_LIST[@]}"; do
    echo "Creating database instance: $SID"
    export ORACLE_SID=$SID
    dbca -silent -createDatabase \
        -templateName General_Purpose.dbc \
        -gdbname $SID \
        -sid $SID \
        -responseFile NO_VALUE \
        -characterSet AL32UTF8 \
        -memoryPercentage $DB_MEMORY_PERCENT \
        -emConfiguration DBEXPRESS \
        -SYSPassword $DB_PASSWORD \
        -SYSTEMPassword $DB_PASSWORD \
        -datafileDestination "$ORACLE_BASE/oradata/$SID" \
        -storageType FS \
        -createAsContainerDatabase false \
        -ignorePreReqs

    # Auto-create tablespaces
    for TS in "${TABLESPACES[@]}"; do
        NAME=$(echo $TS | cut -d: -f1)
        SIZE=$(echo $TS | cut -d: -f2)
        sqlplus / as sysdba <<SQL
CREATE TABLESPACE $NAME DATAFILE '$ORACLE_BASE/oradata/$SID/${NAME}.dbf' SIZE $SIZE AUTOEXTEND ON NEXT 50M MAXSIZE UNLIMITED;
SQL
    done
done

# -------------------------
# Configure Auto-start at Boot
# -------------------------
echo "Setting up Oracle auto-start service..."
cat > /etc/systemd/system/oracle.service <<EOF
[Unit]
Description=Oracle Database 19c
After=network.target

[Service]
Type=forking
User=$ORACLE_USER
Group=$ORACLE_GROUP
ExecStart=$ORACLE_HOME/bin/dbstart $ORACLE_HOME
ExecStop=$ORACLE_HOME/bin/dbshut $ORACLE_HOME
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable oracle.service
systemctl start oracle.service

echo "Oracle 19c intelligent fully automated installation completed successfully!"
